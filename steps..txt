mkdir client

mkdir api (for strapi)

cd client

npx create-react-app .

cleanup all the files in src folder except index.js and App.js

npm i react-router-dom

In src folder > create 3 new folders named

    Home, Products, Product

In Home > Home.jsx

In Products > Products.jsx

In Product > Product.jsx

And write rfc on each page



Now goto App.js and write import { createBrowserRouter, RouterProvider } from "react-router-dom"; 

Use RouterProvider in App.js Like below

    
        function App() {
            return (
                <div>
                <RouterProvider router={router} />
                </div>
            );
        }

Import Home, Products, Product Pages in App.js

Now create router using createBrowserRouter

    const router = createBrowserRouter([
        {
            path: "/",
            element: <Home />,
        },
        {
            path: "/products/:id",  // :id is category id
            element: <Products />,
        },
        {
            path: "/product/:id",   // product id
            element: <Product />,
        },
    ]);

Create Components folder in src and In Components create Navbar and Footer folders.

In Navbar folder > Navbar.jsx

In Footer folder > Footer.jsx


Navbar and Footer will common in all pages. So, what we gonna do is Using "Outlet" from react-router-dom. Import Outlet

Create Layout 


    const Layout = () => {
        return (
            <div className="app">
            <Navbar />
            <Outlet />
            <Footer />
            </div>
        );
    };

Now we have to give this Layout to first element and give children as all these routes

    const router = createBrowserRouter([
        {
            path: "/",
            element: <Layout />,
            children: [
            {
                path: "/",
                element: <Home />,
            },
            {
                path: "/products/:id",
                element: <Products />,
            },
            {
                path: "/product/:id",
                element: <Product />,
            },
            ],
        },
    ]);


Creating Navbar, Footer, Product, Products, Cart, Slider, Card Components

Goto api folder and install strapi

npx create-strapi-app@latest .

    If you choose quickstart it will use sqlite db.

    Click on quickstart


It will Open Strapi-admin page you have to signup with credentials

Then Opens Admin Panel --> Click on Content Type Builder --> User Collection is there by default --> Click on New Collection Type 

Give Collection name as product --> It will take as plural

Like /api/products

Create Category, SubCategory collections also 

And Insert content Using Content Manager

Goto Client folder and create .env file

Create API token from strapi settings

Copy api token and paste it in .env with prefix REACT_APP EX: REACT_APP_API_TOKEN

Copy Strapi baseurl i.e http://localhost:1337/api and paste it in .env as REACT_APP_APP_URL

Now Install axios in client folder

We have to request our strapi url with axios

    // To GET PRODUCTS  
    useEffect(() => {
        const fetchData = async () => {
        try {
            const productData = await axios.get(
            process.env.REACT_APP_API_URL + "/products",
            {
                headers: {
                Authorization: "bearer " + process.env.REACT_APP_API_TOKEN,
                },
            }
            );
            console.log(productData);
        } catch (error) {
            console.log(error);
        }
        };
        fetchData();
    }, []);

** Don't forgot to give space after bearer in Authorization **